Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement_parseCommand
Rule 2     statement_parseCommand -> COMMAND DS
Rule 3     statement_parseCommand -> COMMAND
Rule 4     statement_parseCommand -> COMMAND COMMAND
Rule 5     statement_parseCommand -> INFO COLON TYPE
Rule 6     statement_parseCommand -> INFO

Terminals, with rules where they appear

COLON                : 5
COMMAND              : 2 3 4 4
DS                   : 2
INFO                 : 5 6
TYPE                 : 5
error                : 

Nonterminals, with rules where they appear

statement            : 0
statement_parseCommand : 1

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement_parseCommand
    (2) statement_parseCommand -> . COMMAND DS
    (3) statement_parseCommand -> . COMMAND
    (4) statement_parseCommand -> . COMMAND COMMAND
    (5) statement_parseCommand -> . INFO COLON TYPE
    (6) statement_parseCommand -> . INFO

    COMMAND         shift and go to state 3
    INFO            shift and go to state 4

    statement                      shift and go to state 1
    statement_parseCommand         shift and go to state 2

state 1

    (0) S' -> statement .



state 2

    (1) statement -> statement_parseCommand .

    $end            reduce using rule 1 (statement -> statement_parseCommand .)


state 3

    (2) statement_parseCommand -> COMMAND . DS
    (3) statement_parseCommand -> COMMAND .
    (4) statement_parseCommand -> COMMAND . COMMAND

    DS              shift and go to state 6
    $end            reduce using rule 3 (statement_parseCommand -> COMMAND .)
    COMMAND         shift and go to state 5


state 4

    (5) statement_parseCommand -> INFO . COLON TYPE
    (6) statement_parseCommand -> INFO .

    COLON           shift and go to state 7
    $end            reduce using rule 6 (statement_parseCommand -> INFO .)


state 5

    (4) statement_parseCommand -> COMMAND COMMAND .

    $end            reduce using rule 4 (statement_parseCommand -> COMMAND COMMAND .)


state 6

    (2) statement_parseCommand -> COMMAND DS .

    $end            reduce using rule 2 (statement_parseCommand -> COMMAND DS .)


state 7

    (5) statement_parseCommand -> INFO COLON . TYPE

    TYPE            shift and go to state 8


state 8

    (5) statement_parseCommand -> INFO COLON TYPE .

    $end            reduce using rule 5 (statement_parseCommand -> INFO COLON TYPE .)

